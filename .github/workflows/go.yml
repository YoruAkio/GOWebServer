name: Build and Release

on:
    push:
        branches:
            - main

jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                os: [darwin, linux, windows]
                arch: [amd64]
        steps:
            - uses: actions/checkout@v4

            - name: Setup Go
              uses: actions/setup-go@v5
              with:
                  go-version: '1.22'

            - name: Build and Archive
              run: |
                  mkdir -p GOWebServer
                  GOOS=${{ matrix.os }}
                  GOARCH=${{ matrix.arch }}
                  EXT=""
                  if [ "$GOOS" == "windows" ]; then
                    EXT=".exe"
                  fi
                  go build -o GOWebServer/GOWebServer$EXT
                  os=${{ matrix.os }}
                  arch=${{ matrix.arch }}
                  zip -r GOWebServer-${os}-${arch}.zip GOWebServer
              shell: bash

            - name: Upload Artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: GOWebServer-${{ matrix.os }}-${{ matrix.arch }}
                  path: GOWebServer-${{ matrix.os }}-${{ matrix.arch }}.zip

        outputs:
            matrix: ${{ toJSON(matrix) }}

    release:
        needs: build
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Download Artifacts
              uses: actions/download-artifact@v4

            - name: Move Artifacts
              run: |
                  for file in GOWebServer-*/*.zip; do
                    mv "$file" . || echo "Failed to move $file"
                  done

            - name: Create Tag
              id: create_tag
              run: |
                  TAG_NAME=$(date +'%Y%m%d%H%M%S')-release
                  git tag $TAG_NAME
                  echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
              shell: bash

            - name: Upload Release Assets
              uses: softprops/action-gh-release@v1
              with:
                  tag_name: ${{ steps.create_tag.outputs.tag_name }}
                  name: GOWebServer Release
                  files: |
                      GOWebServer-darwin-amd64.zip
                      GOWebServer-linux-amd64.zip
                      GOWebServer-windows-amd64.zip
                  draft: false
                  prerelease: false
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}